Ahmed Qureshi Full-Stack Developer Halifax NS 

Python, JavaScript, TypeScript, Dart, HTML, SQL, CSS, SASS/SCSS, Node.js, Express.js, React, SvelteKit, Flutter, Django, Django REST Framework, GraphQL, Next.js, React Router, Redux, Tailwind, styled-components, React Query, Framer Motion, Next Auth, Webpack, Pug, Oracle, PostgreSQL, MongoDB, Redis, SQLAlchemy, Mongoose, psycopg2, Oracledb, Numpy, Matplotlib, Pandas, Streamlit, Docker, Kubernetes, Git/GitHub, Nginx, Apache 2, RabbitMQ, Celery, Selenium, PyAutoGui, Sikuli, Jupyter Notebook, Google Colab,

Critical Thinking Logical Problem-Solving Attention to Detail Communication Quick Learning Time Management Adaptability Teamwork at KOKILABEN DHIRUBHAI AMBANI HOSPITAL was Full-Stack Developer Oct 2016â€“Aug2023 Developed tested and maintained dynamic websites using Python and the Django framework. Implemented robust backend functionality by utilizing Django Rest API. Employed Flutter and Dart to create engaging and responsive interfaces for cross-platform applications covering both web and Android platforms. Integrated React, Next.js SvelteKit with JavaScript Typescript to enhance user-centric web experiences. Developed apps to bridge gaps between departments. Automated repetitive tasks to improve efficiency. Created Oracle and Postgres Database queries for departments. Participated in the design and creation of scalable software solutions. Tested and fixed bugs or other coding issues. Orchestrated deployment and hosting of applications on cloud platforms or local private servers (Windows/Linux) by containerizing with Docker and Kubernetes and further configuring using mod_wsgi with Apache 2 uwsgi or gunicorn with nginx. Conducted interviews for potential team members. Managed and led teams and projects to successful completion. Trained the team on new technologies to enhance skill sets. Optimized website and app performance through profiling and tuning. Implemented security best practices to safeguard against vulnerabilities. Enhanced UI/UX by collaborating with designers and improving user flows. Used version control systems like Git for efficient code management. Created comprehensive technical documentation for code and APIs. Conducted code reviews and mentored junior developers. Provided technical support to end users and conducted training sessions. Stayed updated with industry trends and experimented with new technologies. EDUCATION Mumbai University Bachelor of Commerce 

PROJECTS SERVERSENT EVENTS SSE IMPLEMENTATION ASK ME AI Description Developed a realtime communication system using ServerSent Events SSE technology This project demonstrates the implementation of a oneway servertoclient communication channel allowing for efficient realtime updates without the overhead of constant polling or the complexity of WebSockets The system is designed to push updates from the server to connected clients making it ideal for applications requiring live data feeds or notifications Key Features Bilingual Support The application supports both English and Arabic PushtoTalk Users can interact with the AI using a pushtotalk feature making the experience more interactive and engaging TalkBack Abilities The AI responds to user inputs providing a conversational learning experience RealTime Processing Utilizes Redis for efficient realtime data processing and storage Scalable and Reliable The backend is built with Express and served on PM2 ensuring scalability and reliability RealTime Updates Enables server to push data to clients in realtime without client requests Efficient Communication Utilizes a single HTTP connection for multiple messages reducing network overhead Technologies Used Programming Language TypeScript FrontEnd React styledcomponents React Router Redux i18next axios framermotion reactmarkdown reactsyntaxhighlighter reactspeechrecognition BackEnd Nodejs Express ioredis jsonwebtoken Webpack for bundling PM2 for serving Express bundle Database Redis SSE Protocol EventSource API clientside Deployment Docker Kubernetes Nginx GitHub PORTFOLIO WEBSITE Description Developed a personal portfolio website using Nextjs showcasing my projects skills and professional experience The website features a modern responsive design with smooth animations and interactive elements demonstrating proficiency in frontend development and UIUX design principles Key Features Responsive Design Ensures optimal viewing experience across various devices and screen sizes Dynamic Content Utilizes Nextjs for serverside rendering and optimized performance Interactive UI Implements smooth animations and transitions using Framer Motion Particle Effects Incorporates tsParticles for engaging background animations Modern Styling Utilizes Tailwind CSS for efficient and responsive styling Technologies Used Framework Nextjs Programming Language TypeScript Styling Tailwind CSS Animations Framer Motion Particle Effects tsParticles Deployment Vercel GitHub EMPLOYEE VACCINATION TRACKING APPLICATION Description The Employee Vaccination Tracking Application was designed with crossplatform functionality in mind It was developed using Dart and Flutter for the frontend interface which are known for their ability to create highquality native interfaces on both iOS and Android This means that the application can be used on both web and Android platforms It is utilized by HR to monitor and manage employee vaccination records The Django REST framework was used for the backend operations and PostgreSQL for database management The application was successfully deployed using Docker containers ensuring efficient and reliable performance Key Features Automated Reminder System The application sends automated reminders via SMS to employees about upcoming vaccination doses ensuring timely vaccinations Reporting to Department Heads The application generates and sends emails to all department heads providing a list of employees due for vaccination Efficient Tracking The application allows HR to efficiently track and manage the vaccination records of all employees Technologies Used FrontEnd Dart Flutter BackEnd Python Django Rest Framework Database PostgreSQL Oracle Deployment Docker Kubernetes Nginx GitHub DOCTORS PAYOUT Description Developed a comprehensive application used by the finance department to calculate the share of doctors for services rendered within a specific date range The application accepts requests processes data and sends the finalized Excel file via email The system was built using a robust tech stack including Sveltekit for frontend operations Django Rest Framework for backend processes and various libraries for data processing and task queuing The application has significantly streamlined the payout calculation process improving efficiency and accuracy Technologies Used FrontEnd Javascript Sveltekit BackEnd Python Django Django Rest Framework psycopg2 Database PostgreSQL Oracle Data Processing Pandas Numpy Operations Task Queue Celery RabbitMQ Deployment Docker Kubernetes Nginx GitHub RDBMS QUERY REPORTS PORTAL FOR HEALTHCARE SYSTEM Description Developed a webbased query reports portal using Python and Django as the backend framework and JavaScript CSS and HTML for the frontend The portal displays various reports used by different departments such as Pharmacy Clinical Admin Marketing Discharge Billing Radiology etc The reports are rights based and only users with assigned access rights can view them An admin manually assigns the access rights from the admin panel The portal uses two databases Oracle database to retrieve information from the Hospital Information System EHIS and PostgreSQL to store user data and website data Technologies Used FrontEnd Javascript HTML CSS SCSSSASS BackEnd Python Django Django Rest Framework psycopg2 Database PostgreSQL Oracle Data Processing pandas Excel Operations XlsxWriter pywin32 Xlwings Deployment Docker Kubernetes Nginx Apache 2 GitHub FEEDBACK PORTAL Description Developed a comprehensive web application designed to collect and analyze feedback from discharged patients of a hospital The project is divided into three main components Key Features Automated SMS System Implemented a Python script that runs hourly sending SMS messages to recently discharged patients Each message includes a personalized link to the feedback portal Feedback Web Application Created a dynamic emojibased UI where patients can provide feedback The portal includes an admin panel allowing administrators to create departments and modify questions as needed Upon submission of feedback an automated email is dispatched to the relevant departments for review Data Analysis Portal Constructed a separate data analysis portal using the Streamlit framework and Python This portal accessible only by authorized departments allows for indepth review of feedback data Technologies Used FrontEnd Javascript HTML CSS Streamlit BackEnd Python Django psycopg2 Database PostgreSQL Oracle Data Processing Pandas NumPy Deployment Docker Kubernetes Nginx GitHub HELPDESK AND INVENTORY MANAGEMENT SYSTEM HTMS Description Developed a webbased Helpdesk and Inventory Management System for a hospital that enables users to log in any calls that come to the helpdesk and assign a technician to the job The system also allows the caller to track the status of their call log In addition authorized users can add or bulk add from Excel any asset to the hospital and update its status and user of the asset This project demonstrated strong problemsolving collaboration and analytical skills as well as a deep understanding of software development principles and best practices allows for indepth review of feedback data Technologies Used FrontEnd Javascript HTML CSS BackEnd Python Django Django Rest Framework psycopg2 Database PostgreSQL Oracle Data Processing Pandas NumPy Excel Operations Openpyxl Deployment Docker Kubernetes Nginx GitHub  AUTOMATED BILL GENERATOR Description This project involved the development of an automated bill generator using Python and Selenium for the billing department The aim was to automate repetitive daily bills and reduce the workload of the billing team Ensuring that the automated bill generator was easy to use and maintain Technologies Used FrontEnd Tkinter Automation Libraries Selenium pyautogui GitHub 